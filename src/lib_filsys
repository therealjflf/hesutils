#!/usr/bin/env bash

# ==============================================================================
#
# Functions to generate and manipulate Hesiod FILSYS records.
#
# ==============================================================================
#
# This file is part of Hesutils <https://gitlab.com/jflf/hesutils>
# Hesutils Copyright (c) 2019-2021 JFLF
#
# Hesutils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Hesutils is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Hesutils. If not, see <https://www.gnu.org/licenses/>.
#
# ==============================================================================



# Run sed commands on the paths
# ------------------------------------------------------------------------------

# passwd fields:
#  0  user name
#  1  password
#  2  UID
#  3  primary GID
#  4  GECOS
#  5  home directory
#  6  shell

function sed_paths {

    local tmp

    # first go through both sed commands
    # the mount path transformation applies to both with and without FILSYS

    if [[ "$HOMESEDMOUNT" ]] ; then
        if tmp="$( echo $mountpath | sed "$HOMESEDMOUNT" 2>/dev/null )" ; then
            mountpath="$tmp"
        else
            delayedwarnings+="WARNING: HOMESEDMOUNT sed command failed for user \"${passwd[0]}\", passwd path \"${passwd[5]}\"\n"
        fi
    fi

    # the export path transformation is only useful for FILSYS setups

    if (( FILSYS )) && [[ "$HOMESEDEXPORT" ]] ; then
        if tmp="$( echo $exportpath | sed "$HOMESEDEXPORT" 2>/dev/null )" ; then
            exportpath="$tmp"
        else
            delayedwarnings+="WARNING: HOMESEDEXPORT sed command failed for user \"${passwd[0]}\", passwd path \"${passwd[5]}\"\n"
        fi
    fi
}




# Parse external FILSYS records
# ------------------------------------------------------------------------------

# passwd fields:
#  0  user name
#  1  password
#  2  UID
#  3  primary GID
#  4  GECOS
#  5  home directory
#  6  shell

function parse_external_filsys {

    while read -a record ; do

        # skip empty lines and comments
        ( ! (( ${#record[@]} )) || [[ ${record[0]} =~ ^# ]] ) && continue

        # Check that we have the expected number of fields
        # No FILSYS -> 2 fields
        # FILSYS    -> 5 (AFS or generic) or 6 (NFS)
        case ${#record[@]} in
            2|5|6)  ;;
            *)      delayedwarnings+="WARNING: Invalid FILSYS record: ${record[@]}\n"
                    continue
                    ;;
        esac

        # Only overwrite the mount path in the passwd record if the FILSYS
        # record is specific to that user, not a generic one.
        # If multiple records are found, last user-specific one wins for the
        # mount path, and last one wins for the FILSYS record.


        if [[ "${record[0]}" == "${passwd[0]}" ]] ; then
            mountpath="${record[-1]}"
            (( FILSYS )) && filsys[${passwd[0]}]="${record[@]:1}"

        elif [[ "${record[0]}" == '*' ]] ; then
            (( FILSYS )) && filsys[${passwd[0]}]="${record[@]:1}"
        fi
    done

    # avoid returning the read's final error code
    return 0
}




# Top-level FILSYS voodoo function
# ------------------------------------------------------------------------------

# That function needs to be called even if the user didn't ask for FILSYS
# records, as the code to do the homedir path is part of the FILSYS logic.
#
# The function manipulates variables in the environment:
# passwd    /etc/passwd entries
# filsys    user name  ->  filsys record(s)

# passwd fields:
#  0  user name
#  1  password
#  2  UID
#  3  primary GID
#  4  GECOS
#  5  home directory
#  6  shell

function filsys_voodoo {

    local tmp

    exportpath="${passwd[5]}"
    mountpath="${passwd[5]}"
    filsys[${passwd[0]}]=""


    # first run the sed commands, which may modify exportpath and mountpath
    sed_paths

    # generate the automatic FILSYS records using those values
    if (( FILSYS )) && (( FILSYSAUTO )) ; then
        tmp="$FSTYPE "
        case "$FSTYPE" in
            "AFS")  tmp+="$exportpath " ;;
            "NFS")  tmp+="$exportpath $NFSSERVER " ;;
            *)      tmp+="${FSDEVICE//\{\}/$exportpath} ";;
        esac
        tmp+="$FSMOUNTOPTS $mountpath"
        filsys[${passwd[0]}]="${tmp}"
    fi

    # if needed, swap the whole FILSYS record with data form the FSMAPFILE
    [[ "$FSMAPFILE" ]] && parse_external_filsys < "$FSMAPFILE"

    # if needed, swap the whole FILSYS record with data form the FSCOMMAND
    [[ "$FSCOMMAND" ]] && parse_external_filsys < <( "$FSCOMMAND" "${passwd[@]}" )


    # finally update the home directory to use the mount path
    passwd[5]="$mountpath"
}

