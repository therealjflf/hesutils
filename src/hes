#!/usr/bin/env bash

# ==============================================================================
#
# hes
#
# ------------------------------------------------------------------------------
#
# Reimplementation of the MIT command "hes", that iterates over all possible
# Hesiod record types for a given name and prints out the records.
# 
# ==============================================================================
#
# This file is part of Hesutils <https://gitlab.com/jflf/hesutils>
# Hesutils Copyright (c) 2019-2021 JFLF
#
# Hesutils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Hesutils is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Hesutils. If not, see <https://www.gnu.org/licenses/>.
#
# ==============================================================================



# Safety first
set -e -o pipefail


function print_help {

    echo "
Usage:  hes <name> [<name> ...]

This command queries all possible Hesiod record types for the given names, and
prints out the record contents.

It relies on \"hesinfo\", which is part of the \"hesiod\" package in most Linux
distributions. The upstream Hesiod server is configured in the system-wide
Hesiod configuration file, typically \"/etc/hesiod.conf\".
" >&2
}


# Without any argument, print the help and exit
if ! (( $# )) ; then
    print_help
    exit 1
fi


case "$1" in
    -h|--help)  
        print_help
        exit 0
        ;;
esac



records=( passwd
          uid
          group
          gid
          grplist
          filsys
          cluster
          pobox
          pcap
          service
          sloc
        )


for name in "$@" ; do
    (( $# > 1 )) && echo "${name}:"

    for rec in ${records[@]} ; do
        if out="$(hesinfo "$name" $rec 2>/dev/null)" ; then
            printf '%10s: %s\n' ${rec^^} "$out"
        fi
    done
done

