#!/bin/bash

# ==============================================================================
# Hesutils library: dnsmasq configuration writer
# ==============================================================================


# Generate the Hesiod records
# ------------------------------------------------------------------------------

function gen_dnsmasq {

    echo -e "# Generated by hesutils on $(date)\n"

    # block what needs to be blocked
    (( BLOCKUPSTREAM )) && echo "local=/${HESDOMAIN}/"
    (( BLOCKATHENA )) && echo "local=/ns.athena.mit.edu/"

    echo


    # dnsmasq doesn't support CNAMEs so we need to repeat the TXT records twice:
    # .user and .UID, and .group and .GID...

    # user and UID records first
    for uid in ${!uid2user[@]} ; do
        user=${uid2user[$uid]}
        while read line ; do
            for i in ${user}.passwd ${uid}.uid ; do
                printf 'txt-record=%s.%s,"%s"\n' $i $HESDOMAIN "$line"
            done
        done < <(echo ${hesusers[$user]} | sanitize_TXT)
    done

    echo


    # then group and GID records
    for gid in ${!gid2group[@]} ; do
        group=${gid2group[$gid]}
        while read line ; do
            for i in ${group}.group ${gid}.gid ; do
                printf 'txt-record=%s.%s,"%s"\n' $i $HESDOMAIN "$line"
            done
        done < <(echo ${hesgroups[$group]} | sanitize_TXT)
    done

    echo


    # then grplist records
    for uid in ${!uid2user[@]} ; do
        user=${uid2user[$uid]}
        while read line ; do
            printf 'txt-record=%s.%s,"%s"\n' ${user}.grplist $HESDOMAIN "$line"
        done < <(echo ${grplists[$user]} | sanitize_TXT)
    done

    echo


    # and finally filsys records
    if (( FILSYS )) ; then
        for uid in ${!uid2user[@]} ; do
            user=${uid2user[$uid]}
            while read line ; do
                # skip empty lines due to trailing carriage returns
                (( ${#line} )) || continue
                printf 'txt-record=%s.%s,"%s"\n' ${user}.filsys $HESDOMAIN "$line"
            done < <(echo -e ${filsys[$user]} | sanitize_TXT)

        done
    fi

    echo
}

