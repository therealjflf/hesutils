#!/bin/bash

# ==============================================================================
# Hesutils library: dnsmasq configuration writer
# ==============================================================================


# Text utilities
# ------------------------------------------------------------------------------

# Make sure any double quote within a string is properly escaped.

function sanitize_TXT { sed 's/"/\\\\"/g' ; }




# Generate the Hesiod records
# ------------------------------------------------------------------------------

function hes_output {

    echo -e "${COMMENT} Generated by hesutils on $(date)\n"

    # block what needs to be blocked
    case $OUTPUTFMT in
        dnsmasq )
            (( BLOCKUPSTREAM )) && echo "local=/${HESDOMAIN}/"
            (( BLOCKATHENA )) && echo "local=/ns.athena.mit.edu/"
            ;;
    esac

    echo


    # Notes:
    # - numerical indices (eg. ${!uid2user[@]}) are sorted automatically
    # - dnsmasq doesn't support CNAME, we need to repeat the TXT records twice:
    #   .user and .UID, and .group and .GID...


    # user and UID records first
    for uid in ${!uid2user[@]} ; do
        user=${uid2user[$uid]}
        while read line ; do

            case $OUTPUTFMT in
                dnsmasq)
                    for i in ${user}.passwd ${uid}.uid ; do
                        printf 'txt-record=%s.%s,"%s"\n' $i $HESDOMAIN "$line"
                    done
                    ;;
                bind )
                    printf '%-19s IN  TXT    "%s"\n' ${user}.passwd "$line"
                    printf '%-19s IN  CNAME  %s\n' ${uid}.uid ${user}.passwd
                    ;;
            esac

        done < <(echo ${hesusers[$user]} | sanitize_TXT)
    done

    echo


    # then group and GID records
    for gid in ${!gid2group[@]} ; do
        group=${gid2group[$gid]}
        while read line ; do

            case $OUTPUTFMT in
                dnsmasq)
                    for i in ${group}.group ${gid}.gid ; do
                        printf 'txt-record=%s.%s,"%s"\n' $i $HESDOMAIN "$line"
                    done
                    ;;
                bind )
                    printf '%-19s IN  TXT    "%s"\n' ${group}.group "$line"
                    printf '%-19s IN  CNAME  %s\n' ${gid}.gid ${group}.group
                    ;;
            esac

        done < <(echo ${hesgroups[$group]} | sanitize_TXT)
    done

    echo


    # then grplist records
    for uid in ${!uid2user[@]} ; do
        user=${uid2user[$uid]}
        while read line ; do

            case $OUTPUTFMT in
                dnsmasq)
                    printf 'txt-record=%s.%s,"%s"\n' ${user}.grplist $HESDOMAIN "$line"
                    ;;
                bind )
                    printf '%-19s IN  TXT    "%s"\n' ${user}.grplist "$line"
                    ;;
            esac

        done < <(echo ${grplists[$user]} | sanitize_TXT)
    done

    echo


    # and finally filsys records
    if (( FILSYS )) ; then
        for uid in ${!uid2user[@]} ; do
            user=${uid2user[$uid]}
            while read line ; do
                # skip empty lines due to trailing carriage returns
                (( ${#line} )) || continue

                case $OUTPUTFMT in
                    dnsmasq)
                        printf 'txt-record=%s.%s,"%s"\n' ${user}.filsys $HESDOMAIN "$line"
                        ;;
                    bind )
                        printf '%-19s IN  TXT    "%s"\n' ${user}.filsys "$line"
                        ;;
                esac

            done < <(echo -e ${filsys[$user]} | sanitize_TXT)

        done
    fi
}

